{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% extends  "paragraph--default.html.twig" %}

{% set variant = content.field_section_variant['#items'].getString() %}
{% set bg_image = content.field_image['#object'].field_image.entity.field_media_image.entity.uri.getString()|default('') %}
{% if bg_image %}
  {% set bg_image = bg_image|image_style('webp') %}
{% endif %}

{% if variant == 'background-image' %}
  {% set variant = 'primary' %}
{% endif %}

{% set cta = [] %}

{% set href %}
  {% if content.field_button.0['#paragraph'].field_link is not empty %}
    {% if content.field_button.0['#paragraph'].field_link.0.url.external %}
      {{ content.field_button.0['#paragraph'].field_link.uri }}
    {% else %}
      {{ path(content.field_button.0['#paragraph'].field_link.0.url.routeName, content.field_button.0['#paragraph'].field_link.0.url.routeParameters) }}
    {% endif %}
  {% endif %}
{% endset %}
{% set cta = cta|merge(
  { 'href': href,
    'label': content.field_button.0['#paragraph'].field_link.title,
    'icon': content.field_button.0['#paragraph'].field_icon.0.value,
    'variant': content.field_button.0['#paragraph'].field_button_variant.0.value
  }
) %}

{% block paragraph %}
  {% include '@components/section/section.html.twig' with {
    'title': content.field_title | field_value,
    'prefix': content.field_prefix_title | field_value,
    'description': content.field_description | field_value,
    'body': content.field_nested_paragraphs | field_value,
    'center_content': content.field_center_content.0['#markup'],
    'cta': cta,
    'image': bg_image
  } %}

{% endblock paragraph %}
